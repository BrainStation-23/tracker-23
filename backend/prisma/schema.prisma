// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Account {
  id           Int           @id @default(autoincrement())
  firstName    String?
  lastName     String?
  users        User[]
  userAccounts UserAccount[]
  createdAt    DateTime      @default(now())
  updatedAt    DateTime      @updatedAt
}

model UserAccount {
  id           Int               @id @default(autoincrement())
  invitationId String?
  account      Account           @relation(fields: [accountId], references: [id], onDelete: Cascade)
  accountId    Int
  user         User              @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId       Int
  role         Role              @default(USER) // Admin, user
  status       InvitationStatus? //pending accepted, rejected
}

model User {
  id               Int               @id @default(autoincrement())
  email            String            @unique
  hash             String?
  firstName        String?
  lastName         String?
  picture          String?
  createdAt        DateTime          @default(now())
  updatedAt        DateTime          @updatedAt
  userAccounts     UserAccount[]
  accounts         Account[]
  tasks            Task[]
  integrations     Integration[]
  taskIntegrations TaskIntegration[]
  sessions         Session[]
}

model Integration {
  id            Int             @id @default(autoincrement())
  siteId        String
  type          IntegrationType
  accessToken   String
  refreshToken  String
  site          String?
  jiraAccountId String?

  user   User @relation(fields: [userId], references: [id])
  userId Int

  @@unique([siteId, userId], name: "integrationIdentifier")
}

model TempIntegration {
  id            Int             @id @default(autoincrement())
  siteId        String
  type          IntegrationType
  accessToken   String
  refreshToken  String
  site          String?
  jiraAccountId String?
  userId        Int

  @@unique([siteId, userId], name: "tempIntegrationIdentifier")
}

model Task {
  id          Int       @id @default(autoincrement())
  title       String
  description String?
  assigneeId  String?
  projectName String?
  estimation  Decimal?  @db.Decimal(5, 2)
  status      Status    @default(TODO)
  due         DateTime?
  priority    Priority  @default(MEDIUM)
  labels      Labels[]  @default([])

  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())

  user   User @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId Int

  taskIntegrations TaskIntegration[]
  source           String            @default("Tracker23")
  sessions         Session[]
  pinned           Boolean?          @default(false)
}

model TaskIntegration {
  id               Int             @id @default(autoincrement())
  user             User            @relation(fields: [userId], references: [id])
  userId           Int
  task             Task            @relation(fields: [taskId], references: [id], onDelete: Cascade)
  taskId           Int
  type             IntegrationType
  integratedTaskId Int
  url              String?

  // @@unique([type, integratedTaskId, userId], name: "integratedTaskIdentifier")
  // @@index([integratedTaskId, userId, type], type: Hash)
  @@index(fields: [integratedTaskId, userId, type])
}

model Session {
  id        Int           @id @default(autoincrement())
  startTime DateTime      @default(now())
  endTime   DateTime?
  status    SessionStatus @default(STARTED)
  createdAt DateTime      @default(now())
  updatedAt DateTime      @updatedAt

  task   Task @relation(fields: [taskId], references: [id], onDelete: Cascade)
  taskId Int

  user   User @relation(fields: [userId], references: [id])
  userId Int
}

model callSync {
  id        Int      @id @default(autoincrement())
  status    String
  userId    Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

enum Priority {
  LOW
  MEDIUM
  HIGH
}

enum Status {
  TODO
  IN_PROGRESS
  DONE
}

enum Labels {
  BUG
  FEATURE
  REFACTOR
}

enum SessionStatus {
  STARTED
  STOPPED
}

enum IntegrationType {
  JIRA
}

enum Role {
  ADMIN
  USER
}

enum InvitationStatus {
  PENDING
  ACCEPTED
  REJECTED
}
