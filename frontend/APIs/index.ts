import { config } from "config";
import { apiFunction } from "utils/types";

import {
  addManualWorkLogRest,
  authJiraRest,
  createSessionRest,
  createTaskRest,
  deleteIntegrationRest,
  deleteTaskRest,
  exportTasksRest,
  getIntegrationsRest,
  getJiraLinkRest,
  getNotificationsRest,
  getProjectWiseHourRest,
  getProjectWiseStatusRest,
  getSpentTimePerDayRest,
  getTasksRest,
  googleLoginRest,
  loginRest,
  logoutRest,
  pinTaskRest,
  registerRest,
  selectJiraIntegrationRest,
  sendJiraCodeRest,
  stopSessionRest,
  syncStatusRest,
  syncTasksRest,
  updateTaskSTatusRest,
} from "./restApi";

const graphqlApi: apiFunction = {
  login: loginRest,
  googleLogin: googleLoginRest,
  registerUser: registerRest,
  logout: logoutRest,
  createTask: createTaskRest,
  getTasks: getTasksRest,
  syncTasks: syncTasksRest,
  syncStatus: syncStatusRest,
  deleteTask: deleteTaskRest,
  createSession: createSessionRest,
  stopSession: stopSessionRest,
  authJira: authJiraRest,
  getJiraLink: getJiraLinkRest,
  sendJiraCode: sendJiraCodeRest,
  exportTasks: exportTasksRest,
  getIntegrations: getIntegrationsRest,
  deleteIntegration: deleteIntegrationRest,
  getProjectWiseHour: getProjectWiseHourRest,
  getSpentTimePerDay: getSpentTimePerDayRest,
  addManualWorkLog: addManualWorkLogRest,
  updateTaskSTatus: updateTaskSTatusRest,
  pinTask: pinTaskRest,
  selectJiraIntegration: selectJiraIntegrationRest,
  getProjectWiseStatus: getProjectWiseStatusRest,
  getNotifications: getNotificationsRest,
};

const restApi: apiFunction = {
  login: loginRest,
  googleLogin: googleLoginRest,
  registerUser: registerRest,
  logout: logoutRest,
  createTask: createTaskRest,
  getTasks: getTasksRest,
  exportTasks: exportTasksRest,
  syncTasks: syncTasksRest,
  syncStatus: syncStatusRest,
  deleteTask: deleteTaskRest,
  createSession: createSessionRest,
  stopSession: stopSessionRest,
  authJira: authJiraRest,
  getJiraLink: getJiraLinkRest,
  sendJiraCode: sendJiraCodeRest,
  getIntegrations: getIntegrationsRest,
  deleteIntegration: deleteIntegrationRest,
  getProjectWiseHour: getProjectWiseHourRest,
  getSpentTimePerDay: getSpentTimePerDayRest,
  addManualWorkLog: addManualWorkLogRest,
  updateTaskSTatus: updateTaskSTatusRest,
  pinTask: pinTaskRest,
  selectJiraIntegration: selectJiraIntegrationRest,
  getProjectWiseStatus: getProjectWiseStatusRest,
  getNotifications: getNotificationsRest,
};

export const userAPI: apiFunction =
  config?.apiService === "GRAPHQL" ? graphqlApi : restApi;
